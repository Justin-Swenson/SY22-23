<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Lnqf7u7uP0lygwompLi3AAAAAElFTkSuQmCC
</value>
  </data>
</root>